For this project you will design and code three new Android apps meant to work together on an Android phone
or tablet running Marshmallow. Here is a short summary of the apps:

1. Application A1 defines a new dangerous-level permission called “edu.uic.cs478.project3” and sends
one of two kinds of broadcasts. The other two applications will receive the broadcasts; however, these
applications will receive the broadcasts only if the sender (i.e., A1) has that permission. In addition, A1
defines an activity containing two read-only text views and two buttons. The buttons, when selected,
will broadcast two different intents with actions concerning the professional sports of basketball and
baseball, depending on the button pressed. The text views describe the meaning of the buttons to the
device user. Both broadcasts are ordered broadcasts.

2. Application A2 just receives the intents sent by A1; A2 does not contain any activities. Whenever an
intent is received, A2 displays a toast message on the device’s display. The toast message indicates
whether the broadcast sender was selecting basketball or baseball. However, A2’s broadcast receiver is
designed in such a way that it will only respond to a broadcast if the broadcast sender has permission
“edu.uic.cs478.project3”.

3. Application A3 also receives A1’s broadcasts if the sender has permission “edu.uic.cs478.project3”.
Depending on the intent received, A3 will launch one of two activities. The first activity displays
information about at least 6 teams from the National Basketball Association (NBA). The second activity
shows at least 6 teams from the Major League Baseball (MLB) league. However, both activities require
the application user to grant permission “edu.uic.cs478.project3” before displaying the teams.
In addition, each activity consists of two fragments, whose behavior is described below. Finally, application
A3 maintains an options menu and an action bar. The action bar shows the name of the application
(your choice) and the overflow area. The options menu allows a device user to switch between
basketball and baseball. The options menu should be clearly accessible from the overflow area.

Each of the two activities in A3 contains two fragments. The first fragment displays a list of NBA or MLB
teams (whichever applies). The device user may select any team from the list; the currently selected item is
highlighted. The second fragment shows the official web page of the selected team.

When the device is in portrait mode, the two fragments are displayed on different screens. First, the
device will show only the first fragment. When the user selects an item, the the first fragment disappears and
the second fragment is shown. Pressing the “back” soft button on the device, will return the device to the
original configuration (first fragment only), thereby allowing the user to select a different team. When the
device is in landscape mode, application A3 initially shows only the first fragment across the entire width
of the screen. As soon as a user selects an item, the first fragment is “shrunk” to about 1/3 of the screen’s
width. This fragment will appear in the left-hand side of the screen, with the second fragment taking up the
remaining 2/3 of the display on the right. Again, pressing the “back” button will return the application to its
initial configuration. The action bar should be displayed at all times regardless of whether the device is in
portrait or landscape mode.

Finally, the state of application A3 should be retained across device rotations, e.g., when the device is
switched from landscape to portrait configuration and vice versa. This means that the selected list item (in the
first fragment) and the page displayed in the second fragment will be kept during configuration changes.

As for the order of execution of A2 and A3’s receivers, you should configure all three apps in such a way
that the receiver in A2 is always executed before a receiver in A3, after A1 sends a broadcast.

Implementation notes. For this project use a Nexus 5 device running the usual Android platform (API
23—Marshmallow). You are not required to provide backward compatibility with previous Android versions.
Use method setRetainInstance() to prevent fragments from getting deleted when a configuration change occurs,
resulting in the destruction of the containing activity. Check out the app Fragments Static Config Layout
from Adam Porter’s Coursera course to see how to work fragment retention in A3. Finally, when launching
A2, use the Run... menu to indicate that this app must run without a default activity.